AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'aws_pinpoint_demo

  an application to demo aws pinpoint along with lambda & kinesis integrations

  '
Parameters:
  EmailChannelAddress:
    Type: String
  EmailChannelIdentityArn:
    Type: String
Resources:
  AWSPinpointApplication:
    Type: AWS::Pinpoint::App
    Properties:
      Name: aws_pinpoint_demo
  AWSPinpointEmailChannel:
    Type: AWS::Pinpoint::EmailChannel
    Properties:
      ApplicationId:
        Ref: AWSPinpointApplication
      FromAddress:
        Ref: EmailChannelAddress
      Identity:
        Ref: EmailChannelIdentityArn
  AWSPinpointEventStream:
    Type: AWS::Pinpoint::EventStream
    Properties:
      ApplicationId:
        Ref: AWSPinpointApplication
      DestinationStreamArn:
        Fn::GetAtt:
        - PinpointKinesisStream
        - Arn
      RoleArn:
        Fn::GetAtt:
        - PublishEventStreamIamRole
        - Arn
  EmailTemplatesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
  PublishEventStreamIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - pinpoint.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: pinpoint_kinesis_access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - kinesis:PutRecords
            - kinesis:DescribeStream
            Resource:
              Fn::GetAtt:
              - PinpointKinesisStream
              - Arn
  ProcessEventStreamFunctionIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: lambda_kinesis_access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - kinesis:GetRecords
            - kinesis:GetShardIterator
            - kinesis:DescribeStream
            - kinesis:ListStreams
            Resource:
              Fn::GetAtt:
              - PinpointKinesisStream
              - Arn
      - PolicyName: lambda_sqs_access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - sqs:SendMessage
            Resource:
            - Fn::GetAtt:
              - EmailQueue
              - Arn
            - Fn::GetAtt:
              - SMSQueue
              - Arn
            - Fn::GetAtt:
              - CatchAllQueue
              - Arn
  SendMessagesFunctionIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: pinpoint_s3_access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - s3:PutObject
            - s3:GetObject
            Resource:
            - Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - Ref: EmailTemplatesBucket
                - /*
      - PolicyName: pinpoint_mobiletargeting_access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - mobiletargeting:SendMessages
            Resource:
            - Fn::Join:
              - ''
              - - 'arn:aws:mobiletargeting:'
                - Ref: AWS::Region
                - ':'
                - Ref: AWS::AccountId
                - :apps/
                - Ref: AWSPinpointApplication
                - /messages
  SendEmailFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-pinpoint-demo-able/c79d432b4ae303e88203a99fab88d594
      Role:
        Fn::GetAtt:
        - SendMessagesFunctionIamRole
        - Arn
      Handler: app.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          TEMPLATE_BUCKET:
            Ref: EmailTemplatesBucket
          APPLICATION_ID:
            Ref: AWSPinpointApplication
  SendSMSFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-pinpoint-demo-able/459066e629f365a06e4f5f545337f319
      Role:
        Fn::GetAtt:
        - SendMessagesFunctionIamRole
        - Arn
      Handler: app.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          APPLICATION_ID:
            Ref: AWSPinpointApplication
  ProcessEventStreamFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-pinpoint-demo-able/0229a6ad04eaa1b28868ae8825eaa94b
      Role:
        Fn::GetAtt:
        - ProcessEventStreamFunctionIAMRole
        - Arn
      Handler: app.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          EMAIL_QUEUE:
            Ref: EmailQueue
          SMS_QUEUE:
            Ref: SMSQueue
          CATCH_ALL_QUEUE:
            Ref: CatchAllQueue
      Events:
        Stream:
          Type: Kinesis
          Properties:
            Stream:
              Fn::GetAtt:
              - PinpointKinesisStream
              - Arn
            BatchSize: 1
            StartingPosition: LATEST
  PinpointKinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      ShardCount: 1
  EmailQueue:
    Type: AWS::SQS::Queue
  SMSQueue:
    Type: AWS::SQS::Queue
  CatchAllQueue:
    Type: AWS::SQS::Queue
  CampaignStatusTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: campaign_id
        AttributeType: S
      - AttributeName: user_id
        AttributeType: S
      KeySchema:
      - AttributeName: campaign_id
        KeyType: HASH
      - AttributeName: user_id
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
  ProcessQueuesFunctionIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: lambda_dynamodb_access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:Query
            Resource:
              Fn::GetAtt:
              - CampaignStatusTable
              - Arn
      - PolicyName: lambda_sqs_access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
            Resource:
            - Fn::GetAtt:
              - EmailQueue
              - Arn
            - Fn::GetAtt:
              - SMSQueue
              - Arn
  ProcessEmailQueueFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-pinpoint-demo-able/d0143ee0d1acb1e7739c57645f25bc74
      Role:
        Fn::GetAtt:
        - ProcessQueuesFunctionIAMRole
        - Arn
      Handler: app.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          CAMPAIGN_STATUS_TABLE:
            Ref: CampaignStatusTable
      Events:
        Queue:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - EmailQueue
              - Arn
            BatchSize: 1
  ProcessSMSQueueFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-pinpoint-demo-able/17b8ee6fbb67285a54916d555c1d6331
      Role:
        Fn::GetAtt:
        - ProcessQueuesFunctionIAMRole
        - Arn
      Handler: app.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          CAMPAIGN_STATUS_TABLE:
            Ref: CampaignStatusTable
      Events:
        Queue:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - SMSQueue
              - Arn
            BatchSize: 1
  AWSPinpointDemoAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: aws_pinpoint_demo
  MessagesResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: AWSPinpointDemoAPI
      ParentId:
        Fn::GetAtt:
        - AWSPinpointDemoAPI
        - RootResourceId
      PathPart: messages
  EmailResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: AWSPinpointDemoAPI
      ParentId:
        Ref: MessagesResource
      PathPart: email
  SMSResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: AWSPinpointDemoAPI
      ParentId:
        Ref: MessagesResource
      PathPart: sms
  StatusResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: AWSPinpointDemoAPI
      ParentId:
        Ref: MessagesResource
      PathPart: status
  AWSPinpointDemoAPIIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
      Policies:
      - PolicyName: email_function_api_access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - lambda:InvokeFunction
            Resource:
            - Fn::GetAtt:
              - SendEmailFunction
              - Arn
            - Fn::GetAtt:
              - SendSMSFunction
              - Arn
  EmailPutMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: AWSPinpointDemoAPI
      ResourceId:
        Ref: EmailResource
      HttpMethod: POST
      AuthorizationType: NONE
      MethodResponses:
      - StatusCode: 200
      Integration:
        Type: AWS
        Credentials:
          Fn::GetAtt:
          - AWSPinpointDemoAPIIAMRole
          - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
        - StatusCode: 200
        Uri:
          Fn::Join:
          - ''
          - - 'arn:aws:apigateway:'
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
              - SendEmailFunction
              - Arn
            - /invocations
  SMSPutMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: AWSPinpointDemoAPI
      ResourceId:
        Ref: SMSResource
      HttpMethod: POST
      AuthorizationType: NONE
      MethodResponses:
      - StatusCode: 200
      Integration:
        Type: AWS
        Credentials:
          Fn::GetAtt:
          - AWSPinpointDemoAPIIAMRole
          - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
        - StatusCode: 200
        Uri:
          Fn::Join:
          - ''
          - - 'arn:aws:apigateway:'
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
              - SendSMSFunction
              - Arn
            - /invocations
Outputs:
  AWSPinpointApplication:
    Description: The Pinpoint Application
    Value:
      Fn::GetAtt:
      - AWSPinpointApplication
      - Arn
